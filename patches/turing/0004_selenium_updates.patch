diff --git a/engine/tests.py b/engine/tests.py
index 867fdd4..cf1d68e 100644
--- a/engine/tests.py
+++ b/engine/tests.py
@@ -10,6 +10,8 @@ import time as t
 import json
 from datetime import timedelta
 from selenium import webdriver
+from selenium.webdriver.common.by import By
+from selenium.webdriver.support import expected_conditions as EC
 from selenium.webdriver.support.ui import WebDriverWait
 import random
 
@@ -25,6 +27,10 @@ class js_variable_evals_to_true(object):
         return driver.execute_script("return {0};".format(self.variable))
 
 
+def wait_for_element(browser, by, value):
+    WebDriverWait(browser, 5).until(EC.presence_of_element_located((by, value)))
+
+
 class TuringTests():
     '''Classe con alcuni metodi utili implementati'''
 
@@ -102,7 +108,8 @@ class LiveTests(StaticLiveServerTestCase, TuringTests):
         chrome_options.add_argument('--window-size=1420,1080')
         chrome_options.add_argument('--headless')
         chrome_options.add_argument('--disable-gpu')
-        self.selenium = webdriver.Chrome(chrome_options=chrome_options)
+        chrome_options.add_argument("--disable-dev-shm-usage")
+        self.selenium = webdriver.Chrome(options=chrome_options)
         self.updated = False
 
         self.user = User.objects.create_user('test', 't@e.st', 'test')
@@ -116,7 +123,7 @@ class LiveTests(StaticLiveServerTestCase, TuringTests):
         chrome_options = webdriver.ChromeOptions()
         chrome_options.add_argument('--no-sandbox')
         chrome_options.add_argument('--window-size=1420,1080')
-        chrome = webdriver.Chrome(chrome_options=chrome_options)
+        chrome = webdriver.Chrome(options=chrome_options)
         url = '{}/engine/'.format(self.live_server_url)
         chrome.get(url)
         input('Premi Invio per continuare...')
@@ -159,7 +166,7 @@ class LiveTests(StaticLiveServerTestCase, TuringTests):
 
         self.get_classifica('squadre')
 
-        punteggio = self.selenium.find_element_by_id('label-points-{}'.format(squadra)).text
+        punteggio = self.selenium.find_element(By.ID, 'label-points-{}'.format(squadra)).text
         if expected is not None:
             self.assertEqual(
                 str(expected), punteggio,
@@ -182,7 +189,7 @@ class LiveTests(StaticLiveServerTestCase, TuringTests):
 
         self.get_classifica('squadre')
 
-        el = self.selenium.find_element_by_id('label-pos-{}'.format(squadra))
+        el = self.selenium.find_element(By.ID, 'label-pos-{}'.format(squadra))
         posizione = int(el.text[:-1])
         if expected is not None:
             self.assertEqual(
@@ -207,8 +214,8 @@ class LiveTests(StaticLiveServerTestCase, TuringTests):
 
         self.get_classifica('problemi')
 
-        punteggio_base = self.selenium.find_element_by_id('label-punti-{}'.format(problema)).text
-        punteggio_bonus = self.selenium.find_element_by_id('label-bonus-{}'.format(problema)).text
+        punteggio_base = self.selenium.find_element(By.ID, 'label-punti-{}'.format(problema)).text
+        punteggio_bonus = self.selenium.find_element(By.ID, 'label-bonus-{}'.format(problema)).text
         if punteggio_bonus == "":
             punteggio_bonus = "0"
         if expected_base is not None:
@@ -545,8 +552,8 @@ class LiveTests(StaticLiveServerTestCase, TuringTests):
         self.go_to_minute(150)
 
         self.check_punti_problema(1,10)
-        self.selenium.find_element_by_id('play').click()
-        self.assertEqual(self.selenium.find_element_by_id('label-punti-1').text,'10')
+        self.selenium.find_element(By.ID, 'play').click()
+        self.assertEqual(self.selenium.find_element(By.ID, 'label-punti-1').text,'10')
 
     def test_edit_bonus_array(self):
         self.crea_gara(num_squadre=5, n_blocco=10, num_ospiti=0, soluzioni=[0, 0, 0, 0, 0])
@@ -759,15 +766,18 @@ class HtmlTests(StaticLiveServerTestCase, TuringTests):
         chrome_options.add_argument('--window-size=1420,1080')
         chrome_options.add_argument('--headless')
         chrome_options.add_argument('--disable-gpu')
-        self.selenium = webdriver.Chrome(chrome_options=chrome_options)
+        chrome_options.add_argument("--disable-dev-shm-usage")
+        self.selenium = webdriver.Chrome(options=chrome_options)
 
         # Crea un utente di test
         self.user = User.objects.create_user('test', 't@e.st', 'test')
         url = self.get_url("login")
         self.selenium.get(url)
-        self.selenium.find_element_by_name("username").send_keys("test")
-        self.selenium.find_element_by_name("password").send_keys("test")
-        self.selenium.find_element_by_id("submit").click()
+        wait_for_element(self.selenium, By.NAME, "username")
+        self.selenium.find_element(By.NAME, "username").send_keys("test")
+        self.selenium.find_element(By.NAME, "password").send_keys("test")
+        self.selenium.find_element(By.ID, "submit").click()
+        wait_for_element(self.selenium, By.CSS_SELECTOR, "a[href='/accounts/password_change/']")
 
     def tearDown(self):
         self.selenium.quit()
@@ -785,10 +795,12 @@ class HtmlTests(StaticLiveServerTestCase, TuringTests):
 
         url = self.get_url("engine:gara-new")
         self.selenium.get(url)
-        self.selenium.find_element_by_name("nome").send_keys("prova")
-        self.selenium.find_element_by_name("cutoff").send_keys("3")
-        self.selenium.find_element_by_name("k_blocco").send_keys("5")
-        self.selenium.find_element_by_id("submit").click()
+        wait_for_element(self.selenium, By.NAME, "nome")
+        self.selenium.find_element(By.NAME, "nome").send_keys("prova")
+        self.selenium.find_element(By.NAME, "cutoff").send_keys("3")
+        self.selenium.find_element(By.NAME, "k_blocco").send_keys("5")
+        self.selenium.find_element(By.ID, "submit").click()
+        wait_for_element(self.selenium, By.CSS_SELECTOR, "div[class*='alert-success']")
 
         gara = Gara.objects.first()
         self.assertEqual(gara.nome, "prova")
@@ -801,9 +813,11 @@ class HtmlTests(StaticLiveServerTestCase, TuringTests):
 
         url = self.get_url("engine:gara-new")
         self.selenium.get(url)
-        self.selenium.find_element_by_name("nome").send_keys("prova")
-        self.selenium.find_element_by_name("num_problemi").clear()
-        self.selenium.find_element_by_id("submit").click()
+        wait_for_element(self.selenium, By.NAME, "nome")
+        self.selenium.find_element(By.NAME, "nome").send_keys("prova")
+        self.selenium.find_element(By.NAME, "num_problemi").clear()
+        self.selenium.find_element(By.ID, "submit").click()
+        t.sleep(0.5)
 
         self.assertEqual(Gara.objects.count(), 0)
 
@@ -814,7 +828,9 @@ class HtmlTests(StaticLiveServerTestCase, TuringTests):
 
         url = self.get_url("engine:gara-admin", pk=self.gara.pk)
         self.selenium.get(url)
-        self.selenium.find_element_by_id("submit").click()
+        wait_for_element(self.selenium, By.ID, "submit")
+        self.selenium.find_element(By.ID, "submit").click()
+        wait_for_element(self.selenium, By.XPATH, "//p[starts-with(normalize-space(), 'Iniziata')]")
         now = timezone.now()
 
         self.gara.refresh_from_db()
@@ -825,11 +841,13 @@ class HtmlTests(StaticLiveServerTestCase, TuringTests):
         gara = Gara.objects.create(nome="GaraTest", admin=self.user, inizio=timezone.now())
         url = self.get_url("engine:gara-squadre", pk=gara.pk)
         self.selenium.get(url)
-        add = self.selenium.find_element_by_id("add_more")
-        self.selenium.find_element_by_name("form-0-nome").send_keys("sq1")
+        wait_for_element(self.selenium, By.ID, "add_more")
+        add = self.selenium.find_element(By.ID, "add_more")
+        self.selenium.find_element(By.NAME, "form-0-nome").send_keys("sq1")
         add.click()
-        self.selenium.find_element_by_name("form-1-nome").send_keys("sq2")
-        self.selenium.find_element_by_id("submit").click()
+        self.selenium.find_element(By.NAME, "form-1-nome").send_keys("sq2")
+        self.selenium.find_element(By.ID, "submit").click()
+        wait_for_element(self.selenium, By.CSS_SELECTOR, "div[class*='alert-success']")
 
         self.assertEqual(gara.get_squadre(), {
             1: {"nome": "sq1", "ospite": False},
@@ -842,10 +860,12 @@ class HtmlTests(StaticLiveServerTestCase, TuringTests):
         url = self.get_url("engine:inserimento", pk=self.gara.pk)
         self.selenium.get(url)
 
-        self.selenium.find_element_by_name("squadra").send_keys("01")
-        self.selenium.find_element_by_name("problema").send_keys("1")
-        self.selenium.find_element_by_name("jolly").send_keys(" ")
-        self.selenium.find_element_by_id("submit").click()
+        wait_for_element(self.selenium, By.NAME, "squadra")
+        self.selenium.find_element(By.NAME, "squadra").send_keys("01")
+        self.selenium.find_element(By.NAME, "problema").send_keys("1")
+        self.selenium.find_element(By.NAME, "jolly").send_keys(" ")
+        self.selenium.find_element(By.ID, "submit").click()
+        wait_for_element(self.selenium, By.CSS_SELECTOR, "div[class*='alert-info']")
 
         self.assertEqual(self.gara.get_jolly(), [{'id': 1, 'squadra': 1, 'problema': 1}])
 
@@ -855,10 +875,12 @@ class HtmlTests(StaticLiveServerTestCase, TuringTests):
         url = self.get_url("engine:inserimento", pk=self.gara.pk)
         self.selenium.get(url)
 
-        self.selenium.find_element_by_name("squadra").send_keys("01")
-        self.selenium.find_element_by_name("problema").send_keys("1")
-        self.selenium.find_element_by_name("risposta").send_keys("0")
-        self.selenium.find_element_by_id("submit").click()
+        wait_for_element(self.selenium, By.NAME, "squadra")
+        self.selenium.find_element(By.NAME, "squadra").send_keys("01")
+        self.selenium.find_element(By.NAME, "problema").send_keys("1")
+        self.selenium.find_element(By.NAME, "risposta").send_keys("0")
+        self.selenium.find_element(By.ID, "submit").click()
+        wait_for_element(self.selenium, By.CSS_SELECTOR, "div[class*='alert-info']")
 
         c = self.gara.get_consegne()
 
@@ -870,9 +892,11 @@ class HtmlTests(StaticLiveServerTestCase, TuringTests):
         url = self.get_url("engine:inserimento", pk=self.gara.pk)
         self.selenium.get(url)
 
-        self.selenium.find_element_by_name("squadra").send_keys("01")
-        self.selenium.find_element_by_name("problema").send_keys("1")
-        self.selenium.find_element_by_id("submit").click()
+        wait_for_element(self.selenium, By.NAME, "squadra")
+        self.selenium.find_element(By.NAME, "squadra").send_keys("01")
+        self.selenium.find_element(By.NAME, "problema").send_keys("1")
+        self.selenium.find_element(By.ID, "submit").click()
+        t.sleep(0.5)
 
         self.assertFalse(self.gara.eventi.exists())
 
@@ -882,10 +906,12 @@ class HtmlTests(StaticLiveServerTestCase, TuringTests):
         url = self.get_url("engine:inserimento", pk=self.gara.pk)
         self.selenium.get(url)
 
-        self.selenium.find_element_by_name("squadra").send_keys("01")
-        self.selenium.find_element_by_name("problema").send_keys("100")
-        self.selenium.find_element_by_name("risposta").send_keys("0")
-        self.selenium.find_element_by_id("submit").click()
+        wait_for_element(self.selenium, By.NAME, "squadra")
+        self.selenium.find_element(By.NAME, "squadra").send_keys("01")
+        self.selenium.find_element(By.NAME, "problema").send_keys("100")
+        self.selenium.find_element(By.NAME, "risposta").send_keys("0")
+        self.selenium.find_element(By.ID, "submit").click()
+        wait_for_element(self.selenium, By.CSS_SELECTOR, "div[class*='alert-danger']")
 
         c = self.gara.get_consegne()
 
@@ -897,10 +923,12 @@ class HtmlTests(StaticLiveServerTestCase, TuringTests):
         url = self.get_url("engine:inserimento", pk=self.gara.pk)
         self.selenium.get(url)
 
-        self.selenium.find_element_by_name("squadra").send_keys("01")
-        self.selenium.find_element_by_name("problema").send_keys("-1")
-        self.selenium.find_element_by_name("risposta").send_keys("0")
-        self.selenium.find_element_by_id("submit").click()
+        wait_for_element(self.selenium, By.NAME, "squadra")
+        self.selenium.find_element(By.NAME, "squadra").send_keys("01")
+        self.selenium.find_element(By.NAME, "problema").send_keys("-1")
+        self.selenium.find_element(By.NAME, "risposta").send_keys("0")
+        self.selenium.find_element(By.ID, "submit").click()
+        t.sleep(0.5)
 
         c = self.gara.get_consegne()
 
@@ -912,15 +940,17 @@ class HtmlTests(StaticLiveServerTestCase, TuringTests):
 
         url = self.get_url("engine:gara-parametri", pk=gara.pk)
         self.selenium.get(url)
-        self.selenium.find_element_by_name("nome").clear()
-        self.selenium.find_element_by_name("nome").send_keys("prova")
-        self.selenium.find_element_by_name("durata").clear()
-        self.selenium.find_element_by_name("durata").send_keys("02:30:00")
-        self.selenium.find_element_by_name("k_blocco").clear()
-        self.selenium.find_element_by_name("k_blocco").send_keys("6")
-        self.selenium.find_element_by_name("num_problemi").clear()
-        self.selenium.find_element_by_name("num_problemi").send_keys("7")
-        self.selenium.find_element_by_id("submit").click()
+        wait_for_element(self.selenium, By.NAME, "nome")
+        self.selenium.find_element(By.NAME, "nome").clear()
+        self.selenium.find_element(By.NAME, "nome").send_keys("prova")
+        self.selenium.find_element(By.NAME, "durata").clear()
+        self.selenium.find_element(By.NAME, "durata").send_keys("02:30:00")
+        self.selenium.find_element(By.NAME, "k_blocco").clear()
+        self.selenium.find_element(By.NAME, "k_blocco").send_keys("6")
+        self.selenium.find_element(By.NAME, "num_problemi").clear()
+        self.selenium.find_element(By.NAME, "num_problemi").send_keys("7")
+        self.selenium.find_element(By.ID, "submit").click()
+        wait_for_element(self.selenium, By.CSS_SELECTOR, "div[class*='alert-success']")
 
         gara = Gara.objects.first()
         self.assertEqual(gara.durata, timedelta(hours=2,minutes=30))
@@ -935,9 +965,11 @@ class HtmlTests(StaticLiveServerTestCase, TuringTests):
 
         url = self.get_url("engine:gara-parametri", pk=gara.pk)
         self.selenium.get(url)
-        self.selenium.find_element_by_name("num_problemi").clear()
-        self.selenium.find_element_by_name("num_problemi").send_keys("3")
-        self.selenium.find_element_by_id("submit").click()
+        wait_for_element(self.selenium, By.NAME, "num_problemi")
+        self.selenium.find_element(By.NAME, "num_problemi").clear()
+        self.selenium.find_element(By.NAME, "num_problemi").send_keys("3")
+        self.selenium.find_element(By.ID, "submit").click()
+        wait_for_element(self.selenium, By.CSS_SELECTOR, "div[class*='alert-success']")
 
         self.assertEqual(len(Soluzione.objects.filter(gara=gara)), 3)
 
