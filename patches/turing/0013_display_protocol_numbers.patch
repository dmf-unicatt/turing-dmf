diff --git a/engine/models.py b/engine/models.py
index 2908688..45c8b8b 100644
--- a/engine/models.py
+++ b/engine/models.py
@@ -546,6 +546,7 @@ class Consegna(Evento):
                 frase = "La risposta che hai consegnato è esatta!"
             else:
                 frase = "La risposta che hai consegnato è errata."
+            frase += f" Il numero di protocollo è {self.pk} e la data di inserimento è {self.orario.astimezone(TIME_ZONE_SETTING)}."
             return (True, frase)
 
         return res
@@ -581,4 +582,5 @@ class Jolly(Evento):
 
         if (res[0]):
             self.save()
+            res = (res[0], res[1] + f". Il numero di protocollo è {self.pk} e la data di inserimento è {self.orario.astimezone(TIME_ZONE_SETTING)}.")
         return res
diff --git a/engine/tests.py b/engine/tests.py
index 1f801d9..8a9ce47 100644
--- a/engine/tests.py
+++ b/engine/tests.py
@@ -1004,7 +1004,10 @@ class MyTestCase(TestCase):
                 messages = list(response.context["messages"])
                 for i, m in enumerate(messages_post):
                     self.assertEqual(messages[i].tags, m["tag"])
-                    self.assertEqual(messages[i].message, m["message"])
+                    if "partial" in m and m["partial"]:
+                        assert m["message"] in messages[i].message
+                    else:
+                        self.assertEqual(messages[i].message, m["message"])
             if form_errors is not None:
                 form = response.context_data["form"]
                 self.assertEqual(dict(form.errors), form_errors)
@@ -1237,7 +1240,7 @@ class PermissionTests(MyTestCase, TuringTests):
         self.assertTrue(self.user.is_inseritore(self.gara))
 
         self.go_to_minute(130)
-        self.view_helper(200, 200, messages_post=[{"tag": "info", "message": "La risposta che hai consegnato è errata."}])
+        self.view_helper(200, 200, messages_post=[{"tag": "info", "message": f"La risposta che hai consegnato è errata.", "partial": True}])
         e = self.gara.eventi.get()
         self.assertEqual(e.as_child().risposta, 76)
 
@@ -1267,7 +1270,7 @@ class PermissionTests(MyTestCase, TuringTests):
         self.gara.inseritori.add(self.user)
         self.assertTrue(self.user.is_inseritore(self.gara))
 
-        self.view_helper(200, 200, messages_post=[{"tag": "info", "message": "La risposta che hai consegnato è errata."}])
+        self.view_helper(200, 200, messages_post=[{"tag": "info", "message": "La risposta che hai consegnato è errata.", "partial": True}])
 
         self.assertTrue(self.gara.eventi.exists())
         e = self.gara.eventi.get()
@@ -1285,7 +1288,7 @@ class PermissionTests(MyTestCase, TuringTests):
         self.gara.inseritori.add(self.user)
         self.assertTrue(self.user.is_inseritore(self.gara))
 
-        self.view_helper(200, 200, messages_post=[{"tag": "info", "message": "Inserimento avvenuto"}])
+        self.view_helper(200, 200, messages_post=[{"tag": "info", "message": "Inserimento avvenuto", "partial": True}])
 
         jolly = self.gara.get_jolly()
         assert len(jolly) == 1
@@ -1328,7 +1331,7 @@ class PermissionTests(MyTestCase, TuringTests):
         s1.save()
 
         # Stavolta va bene
-        self.view_helper(200, 200, messages_post=[{"tag": "info", "message": "Inserimento avvenuto"}])
+        self.view_helper(200, 200, messages_post=[{"tag": "info", "message": "Inserimento avvenuto", "partial": True}])
         self.assertTrue(self.gara.eventi.exists())
         self.assertEqual(self.gara.get_jolly(), [{'id': 1, 'squadra': 1, 'problema': 2}])
 
@@ -1348,7 +1351,7 @@ class PermissionTests(MyTestCase, TuringTests):
 
         # Inserisce la risposta per la squadra 1
         self.data = {'squadra': s1.pk, 'problema': 2, 'risposta': 76}
-        self.view_helper(200, 200, messages_post=[{"tag": "info", "message": "La risposta che hai consegnato è errata."}])
+        self.view_helper(200, 200, messages_post=[{"tag": "info", "message": "La risposta che hai consegnato è errata.", "partial": True}])
 
         # Controlla gli eventi visibili
         eventi = self.view_helper(200).context['eventi']
@@ -1365,7 +1368,7 @@ class PermissionTests(MyTestCase, TuringTests):
 
         # Inserisce una nuova consegna
         self.data = {'squadra': s2.pk, 'problema': 3, 'jolly': True}
-        self.view_helper(200, 200, messages_post=[{"tag": "info", "message": "Inserimento avvenuto"}])
+        self.view_helper(200, 200, messages_post=[{"tag": "info", "message": "Inserimento avvenuto", "partial": True}])
 
         # Controlla gli eventi visibili
         eventi = self.view_helper(200).context['eventi']
@@ -1456,7 +1459,7 @@ class PermissionTests(MyTestCase, TuringTests):
         sq = self.gara.squadre.all()[0]
 
         self.data = {'squadra': sq.pk, 'problema': 1, 'jolly': True}
-        self.view_helper(200, 200, messages_post=[{"tag": "info", "message": "Inserimento avvenuto"}])
+        self.view_helper(200, 200, messages_post=[{"tag": "info", "message": "Inserimento avvenuto", "partial": True}])
 
         self.data = {'squadra': sq.pk, 'problema': 2, 'jolly': True}
         self.view_helper(200, 200, messages_post=[{"tag": "danger", "message": "Inserimento non riuscito"}])
